{"version":3,"sources":["helpers.js","components/StorePicker.js","firebase.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/login.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","props","myInput","React","createRef","className","onSubmit","e","preventDefault","history","push","current","value","goToStore","type","ref","required","placeholder","defaultValue","firebaseApp","firebase","initializeApp","apiKey","process","authDomain","databaseURL","Header","tagline","Order","orderIds","order","fishes","removeFromOrder","total","Object","keys","reduce","prevTotal","key","fish","count","status","price","TransitionGroup","component","map","isAvailable","transitionOptions","classNames","timeout","enter","exit","CSSTransition","name","onClick","renderOrder","AddFishForm","addFish","nameRef","priceRef","statusRef","descRef","imageRef","Date","now","fishBody","parseFloat","desc","image","currentTarget","reset","createFish","EditFishForm","updateFish","deleteFish","index","handleChange","evt","updatedFish","target","onChange","login","authenticate","Inventory","storeId","loadSampleFishes","useState","owner","setOwner","user","setUser","profilePic","setProfilePic","storeRef","database","authHandler","useCallback","authData","a","async","userId","uid","profile","photoURL","child","once","then","snapshot","val","storeOwner","update","useEffect","auth","onAuthStateChanged","logoutButton","signOut","picture","src","alt","provider","authProvider","signInWithPopup","Fish","details","addToOrder","disabled","App","match","params","setFishes","JSON","parse","localStorage","getItem","setOrder","fishesRef","on","off","setItem","stringify","fishObject","newOrder","sampleFishes","allFishes","remove","NotFound","Router","exact","path","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.f3af85e6.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return cents.toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD',\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, '-')\n    .replace(/[^\\w-]+/g, '')\n    .replace(/--+/g, '-')\n    .replace(/^-+/, '')\n    .replace(/-+$/, '');\n}\n\nexport function getFunName() {\n  const adjectives = [\n    'adorable',\n    'beautiful',\n    'clean',\n    'drab',\n    'elegant',\n    'fancy',\n    'glamorous',\n    'handsome',\n    'long',\n    'magnificent',\n    'old-fashioned',\n    'plain',\n    'quaint',\n    'sparkling',\n    'ugliest',\n    'unsightly',\n    'angry',\n    'bewildered',\n    'clumsy',\n    'defeated',\n    'embarrassed',\n    'fierce',\n    'grumpy',\n    'helpless',\n    'itchy',\n    'jealous',\n    'lazy',\n    'mysterious',\n    'nervous',\n    'obnoxious',\n    'panicky',\n    'repulsive',\n    'scary',\n    'thoughtless',\n    'uptight',\n    'worried',\n  ];\n\n  const nouns = [\n    'women',\n    'men',\n    'children',\n    'teeth',\n    'feet',\n    'people',\n    'leaves',\n    'mice',\n    'geese',\n    'halves',\n    'knives',\n    'wives',\n    'lives',\n    'elves',\n    'loaves',\n    'potatoes',\n    'tomatoes',\n    'cacti',\n    'foci',\n    'fungi',\n    'nuclei',\n    'syllabuses',\n    'analyses',\n    'diagnoses',\n    'oases',\n    'theses',\n    'crises',\n    'phenomena',\n    'criteria',\n    'data',\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getFunName } from '../helpers';\n\nconst StorePicker = props => {\n  const myInput = React.createRef();\n  const goToStore = e => {\n    e.preventDefault();\n    props.history.push(`/store/${myInput.current.value}`);\n  };\n  return (\n    <>\n      <form\n        className=\"store-selector\"\n        onSubmit={e => {\n          return goToStore(e);\n        }}\n      >\n        <h2>Please Enter A Store</h2>\n        <input\n          type=\"text\"\n          ref={myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store &rarr;</button>\n      </form>\n    </>\n  );\n};\n\nStorePicker.propTypes = {\n  history: PropTypes.object.isRequired,\n};\nexport default StorePicker;\n","import firebase from 'firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FB_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FB_DATABASE_URL,\n};\n\nconst firebaseApp = firebase.initializeApp(config);\n\nexport { firebaseApp };\n\nexport default firebase;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ tagline }) => {\n  return (\n    <>\n      <header className=\"top\">\n        <h1>\n          Catch\n          <span className=\"ofThe\">\n            <span className=\"of\">of</span>\n            <span className=\"the\">the</span>\n          </span>\n          Day\n        </h1>\n        <h3 className=\"tagline\">\n          <span>{tagline}</span>\n        </h3>\n      </header>\n    </>\n  );\n};\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired,\n};\nexport default Header;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { formatPrice } from '../helpers';\n\nconst Order = ({ order, fishes, removeFromOrder }) => {\n  const renderOrder = key => {\n    const fish = fishes[key];\n    const count = order[key];\n    const isAvailable = fish && fish.status === 'available';\n    const transitionOptions = {\n      classNames: 'order',\n      key,\n      timeout: { enter: 500, exit: 500 },\n    };\n\n    if (!fish) return null;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {fish ? fish.name : 'fish'} is no longer available\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span className=\"order-span\">\n            <span>\n              <TransitionGroup component=\"span\" className=\"count\">\n                <CSSTransition\n                  classNames=\"count\"\n                  key={count}\n                  timeout={{ enter: 500, exit: 500 }}\n                >\n                  <span>{count}</span>\n                </CSSTransition>\n              </TransitionGroup>\n              lbs {fish.name} {formatPrice(count * fish.price)}\n            </span>\n            <button\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                removeFromOrder(key);\n              }}\n            >\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n  let total = 0.0;\n  let orderIds;\n  if (order && fishes) {\n    orderIds = Object.keys(order);\n    total = orderIds.reduce((prevTotal, key) => {\n      const fish = fishes[key];\n      const count = order[key];\n      const isAvailable = fish && fish.status === 'available';\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n  }\n  return (\n    <div className=\"order-wrap\">\n      <h2>Order</h2>\n      <TransitionGroup component=\"ul\" className=\"order\">\n        {orderIds &&\n          orderIds.map(key => {\n            return renderOrder(key);\n          })}\n      </TransitionGroup>\n      <div className=\"total\">\n        Total: <strong>{formatPrice(total)}</strong>\n      </div>\n    </div>\n  );\n};\n\nOrder.propTypes = {\n  order: PropTypes.object.isRequired,\n  fishes: PropTypes.object,\n  removeFromOrder: PropTypes.func.isRequired,\n};\nexport default Order;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddFishForm = ({ addFish }) => {\n  const nameRef = React.createRef();\n  const priceRef = React.createRef();\n  const statusRef = React.createRef();\n  const descRef = React.createRef();\n  const imageRef = React.createRef();\n\n  const createFish = e => {\n    e.preventDefault();\n    const fishId = `fish${Date.now()}`;\n    const fishBody = {\n      name: nameRef.current.value,\n      price: parseFloat(priceRef.current.value),\n      status: statusRef.current.value,\n      desc: descRef.current.value,\n      image: imageRef.current.value,\n    };\n    const fullFish = {};\n    fullFish[fishId] = fishBody;\n    // addFish(fullFish)\n    addFish(fishBody);\n    // clear form\n    e.currentTarget.reset();\n  };\n\n  return (\n    <form\n      className=\"fish-edit\"\n      onSubmit={e => {\n        return createFish(e);\n      }}\n    >\n      <input\n        type=\"text\"\n        name=\"name\"\n        ref={nameRef}\n        required\n        placeholder=\"Name\"\n      />\n      <input\n        type=\"number\"\n        name=\"price\"\n        ref={priceRef}\n        required\n        placeholder=\"Price\"\n      />\n      <select name=\"status\" ref={statusRef} required>\n        <option value=\"available\">Fresh!</option>\n        <option value=\"unavailable\">Sold Out!</option>\n      </select>\n      <textarea name=\"desc\" ref={descRef} required placeholder=\"Description\" />\n      <input\n        type=\"text\"\n        name=\"image\"\n        ref={imageRef}\n        required\n        placeholder=\"image\"\n      />\n      <button type=\"submit\">+ Add Fish</button>\n    </form>\n  );\n};\n\nAddFishForm.propTypes = {\n  addFish: PropTypes.func.isRequired,\n};\n\nexport default AddFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst EditFishForm = props => {\n  const { name, price, status, desc, image } = props.fish;\n  const { updateFish, deleteFish, index } = props;\n\n  function handleChange(evt) {\n    const updatedFish = {\n      ...props.fish,\n      [evt.target.name]: evt.target.value,\n    };\n    updateFish(props.index, updatedFish);\n  }\n\n  return (\n    <div className=\"fish-edit\">\n      <input\n        name=\"name\"\n        type=\"text\"\n        placeholder=\"Name\"\n        required\n        value={name}\n        onChange={handleChange}\n      />\n      <input\n        name=\"price\"\n        type=\"number\"\n        placeholder=\"Price\"\n        required\n        value={price}\n        onChange={handleChange}\n      />\n      <select name=\"status\" onChange={handleChange} value={status}>\n        <option value=\"available\">Fresh!</option>\n        <option value=\"unavailable\">Sold Out!</option>\n      </select>\n      <textarea\n        name=\"desc\"\n        placeholder=\"Desc\"\n        required\n        value={desc}\n        onChange={handleChange}\n      />\n      <input\n        name=\"image\"\n        type=\"text\"\n        placeholder=\"Image\"\n        required\n        value={image}\n        onChange={handleChange}\n      />\n      <button\n        type=\"button\"\n        onClick={() => {\n          deleteFish(index);\n        }}\n      >\n        Remove Fish\n      </button>\n    </div>\n  );\n};\n\nEditFishForm.propTypes = {\n  fish: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    desc: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n  }).isRequired,\n  updateFish: PropTypes.func.isRequired,\n  deleteFish: PropTypes.func.isRequired,\n  index: PropTypes.string.isRequired,\n};\nexport default EditFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst login = ({ authenticate }) => {\n  return (\n    <nav className=\"login\">\n      <h2>Inventory Login</h2>\n      <p>Sign in to manage your store's inventory.</p>\n      <button\n        type=\"button\"\n        className=\"github\"\n        onClick={() => {\n          authenticate('Github');\n        }}\n      >\n        {' '}\n        Log In With GitHub{' '}\n      </button>\n      <button\n        type=\"button\"\n        className=\"twitter\"\n        onClick={() => {\n          authenticate('Twitter');\n        }}\n      >\n        {' '}\n        Log In With Twitter{' '}\n      </button>\n      <button\n        type=\"button\"\n        className=\"facebook\"\n        onClick={() => {\n          authenticate('Facebook');\n        }}\n      >\n        {' '}\n        Log In With Facebook{' '}\n      </button>\n      <button\n        type=\"button\"\n        className=\"github\"\n        onClick={() => {\n          authenticate('Google');\n        }}\n      >\n        {' '}\n        Log In With Google{' '}\n      </button>\n    </nav>\n  );\n};\n\nlogin.propTypes = {\n  authenticate: PropTypes.func.isRequired,\n};\nexport default login;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport { firebaseApp } from '../firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './login';\n\nconst Inventory = props => {\n  const {\n    storeId,\n    addFish,\n    updateFish,\n    deleteFish,\n    loadSampleFishes,\n    fishes,\n  } = props;\n\n  const [owner, setOwner] = useState(null);\n  const [user, setUser] = useState(null);\n  const [profilePic, setProfilePic] = useState(null);\n\n  const storeRef = firebase.database().ref(storeId);\n\n  const authenticate = provider => {\n    // create new provider base on chosen prvider button\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    // sign it with popup then handle with authHandler\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(authHandler);\n  };\n\n  // auth and check store owner\n  const authHandler = useCallback(\n    async authData => {\n      const userId = authData.user.uid;\n      setUser(userId);\n\n      const profile = authData.user.photoURL;\n      setProfilePic(profile);\n\n      const storeOwner = await storeRef\n        .child('owner')\n        .once('value')\n        .then(snapshot => {\n          return snapshot.val();\n        });\n\n      // if there is no store owner, create one with current userid\n      if (!storeOwner) {\n        storeRef.update({ owner: userId });\n      }\n\n      setOwner(storeOwner);\n    },\n    [storeRef]\n  );\n\n  // logout method\n  const logout = async () => {\n    await firebase.auth().signOut();\n    setUser(null);\n  };\n\n  // maintain user logged in on page refresh\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) authHandler({ user });\n    });\n  }, [authHandler]);\n\n  // logout button\n  const logoutButton = (\n    <button type=\"button\" className=\"logout\" onClick={logout}>\n      Log Out\n    </button>\n  );\n\n  // logged in user picture\n  const picture = <img src={profilePic} alt=\"user\" />;\n\n  // if there is no user currently loggedin, only show Login\n  if (!user) return <Login authenticate={authenticate} />;\n\n  // check if the user is the owner\n  if (owner && user !== owner)\n    return (\n      <div className=\"inventory\">\n        {logoutButton}\n        <h3>\n          Sorry, you are not the owner of this store...\n          <br />\n          <br />\n          go to the homepage to create a new store just for you!\n        </h3>\n      </div>\n    );\n\n  // otherwise (loggedin owner has access to full inventory)\n  if (owner && user && owner === user)\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        <div className=\"inventory-top\">\n          {logoutButton}\n          {picture}\n        </div>\n        {fishes &&\n          Object.keys(fishes).map(key => {\n            return (\n              <EditFishForm\n                key={key}\n                fish={fishes[key]}\n                updateFish={updateFish}\n                deleteFish={deleteFish}\n                index={key}\n              />\n            );\n          })}\n        <AddFishForm addFish={addFish} />\n        <button type=\"button\" onClick={loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  return <div>loading...</div>;\n};\n\nInventory.propTypes = {\n  addFish: PropTypes.func.isRequired,\n  updateFish: PropTypes.func.isRequired,\n  deleteFish: PropTypes.func.isRequired,\n  loadSampleFishes: PropTypes.func.isRequired,\n  fishes: PropTypes.object,\n};\nexport default Inventory;\n","const fishes = [\n  {\n    name: 'Pacific Halibut',\n    image: '/images/hali.jpg',\n    desc:\n      'Everyones favorite white fish. We will cut it to the size you need and ship it.',\n    price: 17.24,\n    status: 'available',\n  },\n\n  {\n    name: 'Lobster',\n    image: '/images/lobster.jpg',\n    desc:\n      'These tender, mouth-watering beauties are a fantastic hit at any dinner party.',\n    price: 32.0,\n    status: 'available',\n  },\n\n  {\n    name: 'Sea Scallops',\n    image: '/images/scallops.jpg',\n    desc:\n      'Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound',\n    price: 16.84,\n    status: 'unavailable',\n  },\n\n  {\n    name: 'Mahi Mahi',\n    image: '/images/mahi.jpg',\n    desc:\n      'Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. ',\n    price: 11.29,\n    status: 'available',\n  },\n\n  {\n    name: 'King Crab',\n    image: '/images/crab.jpg',\n    desc:\n      'Crack these open and enjoy them plain or with one of our cocktail sauces',\n    price: 42.34,\n    status: 'available',\n  },\n\n  {\n    name: 'Atlantic Salmon',\n    image: '/images/salmon.jpg',\n    desc:\n      'This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!',\n    price: 14.53,\n    status: 'available',\n  },\n\n  {\n    name: 'Oysters',\n    image: '/images/oysters.jpg',\n    desc: 'A soft plump oyster with a sweet salty flavor and a clean finish.',\n    price: 25.43,\n    status: 'available',\n  },\n\n  {\n    name: 'Mussels',\n    image: '/images/mussels.jpg',\n    desc:\n      'The best mussels from the Pacific Northwest with a full-flavored and complex taste.',\n    price: 4.25,\n    status: 'available',\n  },\n\n  {\n    name: 'Jumbo Prawns',\n    image: '/images/prawns.jpg',\n    desc:\n      'With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.',\n    price: 22.5,\n    status: 'available',\n  },\n];\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nconst Fish = ({ details: { name, price, status, desc, image }, addToOrder, index }) => {\n  const isAvailable = status === 'available';\n\n  const handleClick = () => {\n    addToOrder(index);\n  };\n  return (\n    <li className=\"menu-fish\">\n      <img src={image} alt={name} />\n      <h3 className=\"fish-name\">\n        {name} <span className=\"price\">{price && formatPrice(price)}</span>\n      </h3>\n      <p>{desc}</p>\n      <button type=\"button\" disabled={!isAvailable} onClick={handleClick}>\n        {isAvailable ? `Add To Cart` : `Sold Out!`}\n      </button>\n    </li>\n  );\n};\n\nFish.propTypes = {\n  addToOrder: PropTypes.func.isRequired,\n  details: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    desc: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Fish;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from '../firebase';\n\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\n\nconst App = props => {\n  const { storeId } = props.match.params;\n  const [fishes, setFishes] = useState({});\n  const [order, setOrder] = useState(\n    JSON.parse(localStorage.getItem(storeId)) || {}\n  );\n\n  const fishesRef = firebase.database().ref(`${storeId}/fishes/`);\n\n  useEffect(() => {\n    // Take a snapshot of the DB\n    fishesRef.on('value', snapshot => {\n      setFishes(snapshot.val());\n    });\n\n    return () => {\n      // Stop the listener\n      fishesRef.off();\n    };\n  }, [fishesRef]);\n\n  useEffect(() => {\n    localStorage.setItem(storeId, JSON.stringify(order));\n  }, [order, storeId]);\n\n  const addFish = fish => {\n    const newFishKey = firebase\n      .database()\n      .ref(storeId)\n      .child('fishes')\n      .push().key;\n    const fishObject = {};\n    fishObject[newFishKey] = fish;\n    fishesRef.update(fishObject);\n  };\n\n  const updateFish = (key, updatedFish) => {\n    const allFishes = { ...fishes };\n    allFishes[key] = updatedFish;\n    // setFishes(allFishes);\n    fishesRef.update(allFishes);\n  };\n\n  const deleteFish = key => {\n    fishesRef.child(key).remove();\n    removeFromOrder(key);\n  };\n\n  const loadSampleFishes = () => {\n    sampleFishes.map(fish => {\n      return addFish(fish);\n    });\n  };\n\n  const addToOrder = key => {\n    setOrder({\n      ...order,\n      [key]: order[key] + 1 || 1,\n    });\n  };\n\n  const removeFromOrder = key => {\n    const newOrder = { ...order };\n    delete newOrder[key];\n    setOrder(newOrder);\n  };\n\n  return (\n    <div className=\"cakes\">\n      <div className=\"menu\">\n        <Header tagline=\"fresh seafood market\" />\n        <ul className=\"fishes\">\n          {fishes &&\n            Object.keys(fishes).map(fish => {\n              return (\n                <Fish\n                  key={fish}\n                  index={fish}\n                  details={fishes[fish]}\n                  addToOrder={addToOrder}\n                />\n              );\n            })}\n        </ul>\n      </div>\n      <Order fishes={fishes} order={order} removeFromOrder={removeFromOrder} />\n      <Inventory\n        storeId={storeId}\n        fishes={fishes}\n        addFish={addFish}\n        loadSampleFishes={loadSampleFishes}\n        updateFish={updateFish}\n        deleteFish={deleteFish}\n      />\n    </div>\n  );\n};\n\nApp.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      storeId: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default App;\n","import React from 'react';\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h2>Not Found!!!</h2>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={StorePicker} />\n        <Route path=\"/store/:storeId\" component={App} />\n        <Route component={NotFound} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport './css/style.css';\nimport Router from './components/Router';\n\nReactDom.render(<Router />, document.getElementById('root'));\n"],"sourceRoot":""}